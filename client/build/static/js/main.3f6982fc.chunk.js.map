{"version":3,"sources":["components/Senator.js","contexts/CongressContext.js","lib/firebase.js","config.js","contexts/AuthContext.js","views/SenatorList.js","assets/images/palpatine.jpeg","components/Representative.js","views/RepresentativeList.js","components/LoginDialog.js","components/Layout.js","components/Welcome.js","components/RickMortyViewer.js","views/MovieList.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","backgroundColor","margin","maxWidth","height","Senator","props","classes","member","senator","memberMiddle","middle_name","fullName","first_name","last_name","Card","className","CardActionArea","CardMedia","component","alt","image","govtrack_id","title","CardContent","Typography","gutterBottom","variant","color","CardActions","IconButton","aria-label","Twitter","Facebook","CongressContext","createContext","senators","reps","CongressContextProvider","useState","setSenators","setReps","useEffect","fetchMembers","side","a","axios","get","headers","process","response","data","results","members","console","log","Provider","value","children","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initialAuthState","isAuthenticated","isInitialised","user","login","logout","reducer","state","action","type","payload","AuthContext","method","signInWithGoogle","Promise","resolve","signInWithEmailAndPassword","createUserWithEmailAndPassword","AuthContextProvider","useReducer","dispatch","email","password","auth","onAuthStateChanged","id","uid","avatar","photoURL","name","displayName","tier","provider","GoogleAuthProvider","signInWithPopup","signOut","flexGrow","SenatorList","memberData","useContext","Grid","container","spacing","map","index","item","total_votes","to","maxHeight","Representative","rep","ListItem","button","ListItemAvatar","once","placeholder","Avatar","src","palpatine","ListItemText","primary","ListItemSecondaryAction","Checkbox","edge","theme","width","Loading","RepresentativeList","loading","congressData","setCongressData","repsData","List","dense","dialogContent","display","flexDirection","minHeight","minWidth","padding","LoginDialog","open","onClose","authContext","handleGoogleClick","handleClose","error","Dialog","aria-labelledby","Button","googleButton","fullWidth","onClick","size","providerIcon","initialValues","submit","validationSchema","Yup","shape","max","required","min","onSubmit","values","setErrors","setStatus","setSubmitting","success","message","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","noValidate","autoComplete","TextField","autoFocus","label","onChange","onBlur","Boolean","helperText","Box","disabled","menuButton","marginRight","dem","repub","navSpacing","textDecoration","list","ButtonAppBar","drawerOpen","setDrawerOpen","loginOpen","setLoginOpen","handleDrawerToggle","handleAuth","AppBar","position","Toolbar","Drawer","justifyContent","alignItems","Welcome","flexWrap","messages","textAlign","card","ALL_CHARACTERS","gql","RickMortyViewer","debouncedName","setDebouncedName","debounce","useCallback","_","searchVal","useQuery","variables","Container","characterList","characters","Input","event","target","character","media","episode","air_date","dotenv","PORT","content","routes","path","Component","selectedMovie","setSelectedMovie","movieList","setMovieList","editOpen","setEditOpen","deleteOpen","setDeleteOpen","handleDelete","_id","delete","movieId","fetchMovies","handleCloseEdit","handleUpdate","put","rank","year","imageUrl","status","handleCloseDelete","movies","filter","movie","includes","handleClickEditOpen","handleClickDeleteOpen","DialogTitle","DialogContent","DialogContentText","DialogActions","App","exact","match","CSSTransition","in","timeout","classNames","unmountOnExit","window","location","hostname","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3f6982fc.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  makeStyles,\n  CardActionArea,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Typography,\n} from '@material-ui/core'\nimport { Twitter, Facebook } from '@material-ui/icons'\n//import SenateCommittees from './SenateCommittees'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: '#ddd',\n    margin: '20px',\n    maxWidth: 200,\n    height: 600,\n  }\n}))\n\nconst Senator = (props) => {\n  const classes = useStyles()\n  const member = props.senator\n  const memberMiddle = member.middle_name !== null ? member.middle_name : ''\n  const fullName = `${member.first_name} ${memberMiddle} ${member.last_name}`\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component='img'\n          alt='Senator'\n          image={`https://www.govtrack.us/static/legislator-photos/${member.govtrack_id}-200px.jpeg`}\n          title={fullName}\n        />\n        <CardContent>\n          <Typography gutterBottom variant='h5' component='h2'>\n            {fullName}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='div'>\n           {/*  <SenateCommittees url={member.api_uri} /> */}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <IconButton color='primary' aria-label='Twitter'>\n          <Twitter />\n        </IconButton>\n        <IconButton color='primary' aria-label='Facebook'>\n                  <Facebook />\n        </IconButton>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default Senator\n","import React, { useContext, createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst CongressContext = createContext({\n    senators: [],\n    reps: [],\n})\n\nexport const CongressContextProvider = (props) => {\n    const [senators, setSenators] = useState([])\n    const [reps, setReps] = useState([])\n\n    useEffect(() => {\n        // fetch data and set the state with it\n        const fetchMembers = async (side) => {\n            try {\n              const response = await axios.get(\n                `https://api.propublica.org/congress/v1/116/${side}/members.json`,\n                {\n                  headers: { 'x-api-key': process.env.REACT_APP_PROPUBLICA_API_KEY },\n                },\n              )\n              const members = await response.data.results[0].members\n/*               const membersWithCommittees = members.map((member) => {\n                const committeeList = fetchCommitteeList(member.api_uri)\n                return (member = { ...member, committeeList })\n              }) */\n              if (side === 'senate') setSenators(members)\n              if (side === 'house') setReps(members)\n            } catch (error) {\n              console.log(error)\n            }\n        }\n        fetchMembers('senate')\n        fetchMembers('house')\n    }, [])\n\n    return (\n        <CongressContext.Provider value={\n            {senators, reps}\n        }>\n            {props.children}\n        </CongressContext.Provider>\n    )\n}\n\nexport const useCongressContext = () => useContext(CongressContext)","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { firebaseConfig } from '../config'\n\nif (!firebase.apps.length) {\n    console.log(process.env)\n    firebase.initializeApp(firebaseConfig)\n}\n\nexport default firebase","export const firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n}","import React, { useEffect, createContext, useReducer } from 'react'\nimport firebase from '../lib/firebase'\n\nconst initialAuthState = {\n    isAuthenticated: false,\n    isInitialised: false,\n    user: null,\n    login: () => { },\n    logout: () => { },\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'AUTH_STATE_CHANGED': {\n            const { isAuthenticated, user } = action.payload\n\n            return {\n                ...state,\n                isAuthenticated,\n                isInitialised: true,\n                user\n            }\n        }\n        default: {\n            return {...state}\n            }\n    }\n}\n\nexport const AuthContext = createContext({\n    ...initialAuthState,\n    method: 'FirebaseAuth',\n    signInWithGoogle: () => Promise.resolve(),\n    signInWithEmailAndPassword: () => Promise.resolve(),\n    createUserWithEmailAndPassword: () => Promise.resolve(),\n    logout: () => Promise.resolve()\n})\n\nconst AuthContextProvider = ( { children }) => {\n    //const [isAuthenticated, setIsAuthenticated] = useState(false)\n    const [state, dispatch] = useReducer(reducer, initialAuthState)\n\n    const signInWithGoogle = () => {\n        const provider = new firebase.auth.GoogleAuthProvider()\n        return firebase.auth().signInWithPopup(provider)\n    }\n\n    const signInWithEmailAndPassword = async (email, password) => {\n        return firebase.auth().signInWithEmailAndPassword(email, password)\n    }\n\n    const createUserWithEmailAndPassword = async (email, password) => {\n        return firebase.auth().createUserWithEmailAndPassword(email, password);\n      };\n\n    const logout = () => {\n        return firebase.auth().signOut()\n    }\n\n    useEffect(() => {\n        const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n          if (user) {\n            // Here you should extract the complete user profile to make it available in your entire app.\n            // The auth state only provides basic information.\n    \n            dispatch({\n              type: 'AUTH_STATE_CHANGED',\n              payload: {\n                isAuthenticated: true,\n                user: {\n                  id: user.uid,\n                  avatar: user.photoURL,\n                  email: user.email,\n                  name: user.displayName || user.email,\n                  tier: 'Premium'\n                }\n              }\n            });\n          } else {\n            dispatch({\n              type: 'AUTH_STATE_CHANGED',\n              payload: {\n                isAuthenticated: false,\n                user: null\n              }\n            });\n          }\n        });\n    \n        return unsubscribe;\n      }, [dispatch]);\n\n    return (\n        <AuthContext.Provider value={{\n            ...state,\n            method: 'FirebaseAuth',\n            signInWithGoogle,\n            signInWithEmailAndPassword,\n            createUserWithEmailAndPassword,\n            logout\n        }}\n        >\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContextProvider","import React, { useContext } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {\n  Grid,\n  makeStyles\n} from '@material-ui/core'\nimport Senator from '../components/Senator'\nimport { useCongressContext } from '../contexts/CongressContext'\nimport { AuthContext } from '../contexts/AuthContext'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  }\n})) \n\nconst SenatorList = () => {\n  const classes = useStyles()\n  const memberData = useCongressContext()\n  const { isAuthenticated } = useContext(AuthContext)\n  \n/*   const [memberData, setMemberData] = useState({\n    loading: false,\n    senators: []\n    })   */                 \n\n/*   useEffect(() => {\n    setMemberData({\n      loading: false,\n      senators: senateData.results[0].members\n    })\n  }, []) */\n\n  return (\n    isAuthenticated ?\n      <div>\n        <Grid className={classes.root} container spacing={2}>\n          {memberData.senators.map((member, index) => {\n\n            return (\n              <Grid key={member.id + member.total_votes} item>\n                <Senator senator={member}/>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </div>\n      : <Redirect to='/'/>\n    )\n}\n\nexport default SenatorList\n","export default __webpack_public_path__ + \"static/media/palpatine.bbfc4801.jpeg\";","import React from 'react'\nimport {\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Checkbox,\n  Avatar,\n  makeStyles\n} from '@material-ui/core'\nimport LazyLoad from 'react-lazyload'\nimport palpatine from '../assets/images/palpatine.jpeg'\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    maxHeight: 300\n  },\n});\n\nconst Representative = (props) => {\n  const member = props.rep\n  const memberMiddle = member.middle_name === null ? '' : member.middle_name\n  const classes = useStyles()\n\n  return (\n      <ListItem button className={classes.root}>\n      <ListItemAvatar>\n        <LazyLoad once alt=\"...\" placeholder={<Avatar src={palpatine} />}>\n          <Avatar\n            alt={`Avatar`}\n            src={`https://www.govtrack.us/static/legislator-photos/${member.govtrack_id}-100px.jpeg`}\n        />\n        </LazyLoad>\n        </ListItemAvatar>\n        <ListItemText\n          primary={`${member.first_name} ${memberMiddle} ${member.last_name}`}\n        />\n      <ListItemSecondaryAction>\n        <Checkbox edge='end' />\n        </ListItemSecondaryAction>\n      </ListItem>\n  )\n}\n\nexport default Representative\n","import React, { useState, useEffect, useContext } from 'react'\nimport repsData from '../data/house.json'\n//import axios from 'axios'\nimport Representative from '../components/Representative'\nimport { List, makeStyles } from '@material-ui/core'\nimport LazyLoad from 'react-lazyload'\nimport { AuthContext } from '../contexts/AuthContext'\nimport { Redirect } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: '#ddd',\n  },\n}))\n\nconst Loading = () => (\n  <div>\n    <h4>Loading...</h4>\n  </div>\n)\n\nconst RepresentativeList = () => {\n  const classes = useStyles()\n\n  const { isAuthenticated } = useContext(AuthContext)\n\n  const [congressData, setCongressData] = useState({\n    loading: false,\n    reps: [],\n  })\n\n  //const [congressReps, setCongressReps] = useState({ reps: [] })\n  //const [loading, setLoading] = useState({ loading: false })\n  \n  useEffect(() => {\n    setCongressData({ loading: false, reps: repsData.results[0].members })\n  }, [])\n  \n\n\n/*   useEffect(() => {\n    const fetchReps = () => {\n      setCongressData({ loading: true })\n      axios\n        .get(`https://api.propublica.org/congress/v1/116/house/members.json`, {\n          headers: { 'x-api-key': process.env.REACT_APP_PROPUBLICA_API_KEY }\n        })\n        .then(function (response) {\n          console.log(response.data)\n          setCongressData({\n            loading: false,\n            reps: response.data.results[0].members,\n          })\n        }).catch(function (error) {\n          console.log(error)\n        })\n    }\n    fetchReps()\n  }, []) */\n\n  return (\n    isAuthenticated ?\n    <div>\n      {!congressData.loading && (\n        <div className='column'>\n          <h1>{congressData.reps.length} Representatives!</h1>\n          <List dense className={classes.root}>\n            {congressData.reps.map((member) => {\n              return (\n                <LazyLoad\n                  key={member.id + member.total_votes}\n                  placeholder={<Loading />}\n                  height={200}\n                >\n                  <Representative\n                    rep={member}\n                    key={member.id + member.total_votes}\n                  ></Representative>\n                </LazyLoad>\n              )\n            })}\n          </List>\n        </div>\n      )}\n      </div>\n      : <Redirect to=\"/\"/>\n  )\n}\n\nexport default RepresentativeList\n","import React, { useContext } from 'react'\nimport { Box, Dialog, TextField, Button, makeStyles } from '@material-ui/core'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport { AuthContext } from '../contexts/AuthContext'\n\nconst useStyles = makeStyles(() => ({\n  dialogContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 300,\n    minWidth: 400,\n    padding: 20,\n  },\n}))\n\nconst LoginDialog = (props) => {\n  const classes = useStyles()\n  const { open, onClose } = props\n\n  const authContext = useContext(AuthContext)\n  const { signInWithGoogle, signInWithEmailAndPassword } = authContext\n\n  const handleGoogleClick = async () => {\n    try {\n      await signInWithGoogle()\n      handleClose()\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleClose = () => {\n    onClose(false)\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby='Login Dialog'>\n      <Button\n        className={classes.googleButton}\n        fullWidth\n        onClick={handleGoogleClick}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        <img alt=\"Google\" className={classes.providerIcon} src=\"/static/images/google.svg\"/>\n        </Button>\n      <Formik\n        initialValues={{\n          email: 'foo@example.com',\n          password: 'dkj8u4(&#Ldljad',\n          submit: null,\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email('Must be a valid email')\n            .max(50)\n            .required('Email is required'),\n          password: Yup.string()\n            .min(8, 'Password is too short!')\n            .max(50, 'Password is too long!')\n            .required('Password is required'),\n        })}\n        onSubmit={ async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await signInWithEmailAndPassword(values.email, values.password)\n            console.log(values.email, values.password)\n            handleClose()\n          } catch (err) {\n            console.error(err)\n            setStatus({ success: false })\n            setErrors({ submit: err.message })\n            setSubmitting(false)\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <form noValidate autoComplete='off' onSubmit={handleSubmit} className={classes.dialogContent}>\n            <h2>Sign in</h2>\n            <TextField\n              autoFocus\n              label='Email Address'\n              type='email'\n              name='email'\n              variant='filled'\n              margin='normal'\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              error={Boolean(touched.email && errors.email)}\n              helperText={touched.email && errors.email}\n              required\n              fullWidth\n            />\n            <TextField\n              label='Password'\n              type='password'\n                variant='filled'\n                name='password'\n              margin='normal'\n                placeholder='********'\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={Boolean(touched.password && errors.password)}\n                helperText={touched.password && errors.password}\n                required\n                fullWidth\n            />\n            <Box>\n              <Button color='primary' variant='contained' onClick={handleClose}>\n                Cancel\n              </Button>\n              <Button color='primary' variant='contained' type='submit' disabled={Boolean(errors.email || errors.password)}>Login</Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Dialog>\n  )\n}\n\nexport default LoginDialog\n","import React, { useState, useContext } from 'react'\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  makeStyles,\n  Drawer,\n  List,\n  ListItem,\n  Button,\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { NavLink } from 'react-router-dom'\n\nimport LoginDialog from '../components/LoginDialog'\nimport { AuthContext } from '../contexts/AuthContext'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  dem: {\n    color: 'blue',\n  },\n  repub: {\n    color: 'red',\n  },\n  navSpacing: {\n    marginRight: '5rem',\n    color: '#fff',\n    textDecoration: 'none',\n  },\n  list: {\n    width: 250,\n    backgroundColor: '#00f'\n  },\n}))\n\nexport default function ButtonAppBar() {\n  const classes = useStyles()\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const [loginOpen, setLoginOpen] = useState(false)\n\n  const authContext = useContext(AuthContext)\n\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen)\n  }\n\n/*   const handleDialogToggle = () => {\n    setLoginOpen(!loginOpen)\n  } */\n\n  const handleAuth = () => {\n    if (authContext.isAuthenticated) {\n      authContext.logout()\n      setLoginOpen(false)\n      return\n    }\n    if (!authContext.isAuthenticated) {\n      if (!loginOpen) {\n        setLoginOpen(true)\n        return\n      }\n      setLoginOpen(false)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='menu'\n            onClick={handleDrawerToggle}\n          >\n            <MenuIcon />\n          </IconButton>\n          <NavLink to='/house' className={classes.navSpacing}>\n            House\n          </NavLink>\n          <NavLink to='/senate' className={classes.navSpacing}>\n            Senate\n          </NavLink>\n          <NavLink to='/graphql' className={classes.navSpacing}>\n            GraphQL Example\n          </NavLink>\n          <NavLink to='/movies' className={classes.navSpacing}>\n            Movie CRUD Example\n          </NavLink>\n          {\n            authContext.isAuthenticated ? <Button color='inherit' onClick={handleAuth}>Logout</Button> :\n            <Button color='inherit' onClick={handleAuth}>Login</Button>\n          }\n        </Toolbar>\n      </AppBar>\n      <Drawer open={drawerOpen} onClose={handleDrawerToggle}>\n        <List className={classes.list}>\n          <ListItem>\n          <NavLink to='/house' className={classes.navSpacing} onClick={handleDrawerToggle}>\n            House\n          </NavLink>\n          </ListItem>\n          <ListItem>\n          <NavLink to='/senate' className={classes.navSpacing} onClick={handleDrawerToggle}>\n            Senate\n          </NavLink>\n          </ListItem>\n        </List>\n      </Drawer>\n      <LoginDialog open={loginOpen} onClose={handleAuth}/>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../contexts/AuthContext'\nimport { Box, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        backgroundColor: '#ddd'\n    }\n}))\n\nconst Welcome = () => {\n    const classes = useStyles()\n\n    const { isAuthenticated } = useContext(AuthContext)\n\n    return (\n        <Box className={classes.root}>\n            { \n                isAuthenticated ?\n            <h1>Welcome to my Congress App!</h1>\n                    :\n            <h1>You need to register or login to see the Congress App data.</h1>\n            }\n        </Box>\n        \n    )\n}\n\nexport default Welcome","import React, { useState, useCallback } from 'react'\nimport _ from 'lodash'\nimport { useQuery, gql } from '@apollo/client'\nimport { Container,\n    makeStyles,\n    Typography,\n    Card,\n    CardMedia,\n    CardActionArea,\n    CardContent,\n    Input,\n    IconButton,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n    },\n    messages: {\n        backgroundColor: '#ddd',\n        minHeight: '20rem',\n        minWidth: '20rem',\n        textAlign: 'center',\n      },\n      card: {\n        width: 345,\n        margin: 20,\n      },\n}))\n\nconst ALL_CHARACTERS = gql`\nquery ($debouncedName: String!){\n    characters(filter: { name: $debouncedName }) {\n    info {\n      count\n    }\n    results {\n      id\n      name\n      gender\n      image\n      episode {\n        name\n        air_date\n      }\n    }\n  }\n}\n`\n\nconst RickMortyViewer = () => {\n    const classes = useStyles()\n    const [debouncedName, setDebouncedName] = useState(\"\")\n\n    const handleInput = event => {\n        debounce(event.target.value)\n    }\n\n    const debounce = useCallback(\n        _.debounce((searchVal) => {\n            setDebouncedName(searchVal)\n        }, 1000),\n        []\n    )\n\n    const { loading, error, data } = useQuery(ALL_CHARACTERS, {\n        variables: { debouncedName }\n    })\n\n    if (loading) {\n        return (\n            <Container className={classes.root}>\n                <Typography className={classes.messages}>Loading...</Typography>\n            </Container>\n        )\n    }\n\n    if (error) {\n        return (\n            <Typography className={classes.messages}>{`${error.message}`}</Typography>\n        )\n    }\n\n    const characterList = data.characters.results\n\n    console.log(characterList)\n\n\n\n    return (\n        <>\n        <form>\n                <Input placeholder='Search' onChange={handleInput}/>\n                <IconButton aria-label=\"search\">\n                    <SearchIcon/>\n                </IconButton>\n        </form>\n        <Container className={classes.root}>\n            {characterList.map(character => {\n                return (\n                    <Card className={classes.card} key={character.id}>\n                        <CardActionArea>\n                            <CardMedia\n                                component='img'\n                                height='300'\n                                className={classes.media}\n                                image={character.image}\n                                title={character.name}\n                                />\n                            <CardContent>\n                                <Typography gutterBottom variant='h5' component='h2'>\n                                    {character.name}\n                                </Typography>\n                                <Typography variant='subtitle1' color='textSecondary'>\n                                    First Episode: {character.episode[0].name}\n                                </Typography>\n                                <Typography variant='subtitle2' color='textSecondary'>\n                                    Air date: {character.episode[0].air_date}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                )\n            })}\n        </Container>\n        </>\n    )\n}\n\nexport default RickMortyViewer","import React, { useState, useEffect, useCallback } from 'react'\nimport axios from 'axios'\nimport _ from 'lodash'\nimport {\n  Container,\n  makeStyles,\n  Typography,\n  Card,\n  CardMedia,\n  CardActions,\n  CardContent,\n  Input,\n  IconButton,\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport * as dotenv from 'dotenv'\n\ndotenv.config()\nconst PORT = process.env.PORT || '5050'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  card: {\n    width: 345,\n    margin: 20,\n  },\n  content: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}))\n\nconst MovieList = () => {\n  const classes = useStyles()\n  const [selectedMovie, setSelectedMovie] = useState({ title: '' })\n  const [movieList, setMovieList] = useState([])\n  const [debouncedName, setDebouncedName] = useState('')\n  const [editOpen, setEditOpen] = useState(false)\n  const [deleteOpen, setDeleteOpen] = useState(false)\n\n  const handleInput = (event) => {\n    debounce(event.target.value)\n  }\n\n  const debounce = useCallback(\n    _.debounce((searchVal) => {\n      setDebouncedName(searchVal)\n    }, 1000),\n    [],\n  )\n\n  const handleSearch = () => {\n    if (debouncedName) {\n      setMovieList(movieList.filter(movie => movie.title.includes(debouncedName)))\n    } else {\n      fetchMovies()\n    }\n  }\n\n  const handleDelete = async () => {\n    setDeleteOpen(false)\n    console.log(selectedMovie._id)\n    try {\n      await axios.delete(`http://localhost:${PORT}/movie/delete`, {\n        data: {\n          movieId: selectedMovie._id,\n        },\n      })\n      fetchMovies()\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const handleClickEditOpen = (movie) => {\n    setSelectedMovie(movie.movie)\n    setEditOpen(true)\n  }\n\n  const handleCloseEdit = () => {\n    setEditOpen(false)\n  }\n\n  const handleUpdate = async (values) => {\n    try {\n      const result = await axios.put(`http://localhost:${PORT}/movie/update`, {\n        data: {\n          movieId: values.id,\n          title: values.title,\n          rank: values.rank,\n          year: values.year,\n          imageUrl: values.imageUrl,\n          height: values.height,\n          width: values.width,\n        },\n      })\n      if (result.status === 200) {\n        fetchMovies()\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const handleClickDeleteOpen = (movie) => {\n    setSelectedMovie(movie.movie)\n    setDeleteOpen(true)\n  }\n\n  const handleCloseDelete = () => {\n    setDeleteOpen(false)\n  }\n\n  const fetchMovies = async () => {\n    try {\n      const movies = await axios.get(`http://localhost:${PORT}/movie`)\n      setMovieList(movies.data)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  useEffect(() => {\n    fetchMovies()\n  }, [])\n\n  return (\n    <>\n      <form>\n        <Input placeholder='Search' onChange={handleInput} />\n        <IconButton aria-label='search' onClick={handleSearch}>\n          <SearchIcon />\n        </IconButton>\n      </form>\n      <Container className={classes.root}>\n        {movieList.map((movie) => {\n          return (\n            <Card className={classes.card} key={movie._id}>\n              <CardMedia\n                component='img'\n                height='300'\n                className={classes.media}\n                image={movie.image?.imageUrl}\n                title={movie.title}\n              />\n              <CardContent>\n                <Typography gutterBottom variant='h5' component='h2'>\n                  {movie.title}\n                </Typography>\n                <Box className={classes.content}>\n                  <Typography variant='subtitle1' color='textSecondary'>\n                    Year: {movie.year}\n                  </Typography>\n                  <Typography variant='subtitle1' color='textSecondary'>\n                    Rank: {movie.rank}\n                  </Typography>\n                </Box>\n              </CardContent>\n              <CardActions>\n                <IconButton\n                  aria-label='edit'\n                  onClick={() => handleClickEditOpen({ movie })}\n                >\n                  <EditIcon />\n                </IconButton>\n                <IconButton\n                  aria-label='delete'\n                  onClick={() => handleClickDeleteOpen({ movie })}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </CardActions>\n            </Card>\n          )\n        })}\n      </Container>\n      <Dialog\n        open={editOpen}\n        onClose={handleCloseEdit}\n        aria-labelledby='edit-dialog-title'\n      >\n        <Formik\n          initialValues={{\n            title: selectedMovie?.title,\n            rank: selectedMovie?.rank,\n            imageUrl: selectedMovie?.image?.imageUrl,\n            height: selectedMovie?.image?.height,\n            width: selectedMovie?.image?.width,\n            id: selectedMovie?._id,\n            year: selectedMovie?.year,\n          }}\n          validationSchema={Yup.object().shape({\n            title: Yup.string('Enter movie title.').required(\n              'Title is required',\n            ),\n            rank: Yup.number('Movie rank number'),\n            height: Yup.number('Height'),\n            imageUrl: Yup.string('Image URL'),\n            width: Yup.number('Width'),\n            id: Yup.string('ID').required('ID is required.'),\n            year: Yup.string('Year'),\n          })}\n          onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n            try {\n              await handleUpdate(values)\n              handleCloseEdit()\n            } catch (err) {\n              console.error(err)\n              setStatus({ success: false })\n              setErrors({ submit: err.message })\n              setSubmitting(false)\n            }\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <form\n              noValidate\n              autoComplete='off'\n              onSubmit={handleSubmit}\n              className={classes.dialogContent}\n            >\n              <DialogTitle id='edit-dialog-title'>Edit Movie</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  Make changes below to the data about this movie:\n                </DialogContentText>\n                <TextField\n                  autoFocus\n                  id='title'\n                  name='title'\n                  label='Movie Title'\n                  type='text'\n                  fullWidth\n                  value={values.title}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={Boolean(touched.title && errors.title)}\n                  helperText={touched.title && errors.title}\n                />\n                <Box className={classes.content}>\n                  <TextField\n                    autoFocus\n                    id='year'\n                    name='year'\n                    label='Year'\n                    type='text'\n                    value={values.year}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={Boolean(touched.year && errors.year)}\n                    helperText={touched.year && errors.year}\n                  />\n                  <TextField\n                    autoFocus\n                    name='rank'\n                    id='rank'\n                    label='Rank'\n                    type='number'\n                    value={values.rank}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={Boolean(touched.rank && errors.rank)}\n                    helperText={touched.rank && errors.rank}\n                  />\n                </Box>\n                <TextField\n                  autoFocus\n                  id='imageUrl'\n                  name='imageUrl'\n                  label='Image URL'\n                  type='text'\n                  fullWidth\n                  value={values.imageUrl}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={Boolean(touched.imageUrl && errors.imageUrl)}\n                  helperText={touched.imageUrl && errors.imageUrl}\n                />\n                <Box className={classes.content}>\n                  <TextField\n                    autoFocus\n                    id='height'\n                    name='height'\n                    label='Height'\n                    type='number'\n                    value={values.height}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={Boolean(touched.height && errors.height)}\n                    helperText={touched.height && errors.height}\n                  />\n                  <TextField\n                    autoFocus\n                    id='width'\n                    name='width'\n                    label='Width'\n                    type='number'\n                    value={values.width}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={Boolean(touched.width && errors.width)}\n                    helperText={touched.width && errors.width}\n                  />\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleCloseEdit} color='primary'>\n                  Cancel\n                </Button>\n                <Button type='submit' color='primary'>\n                  Save\n                </Button>\n              </DialogActions>\n            </form>\n          )}\n        </Formik>\n      </Dialog>\n      <Dialog open={deleteOpen} onClose={handleCloseDelete}>\n        <DialogTitle>Delete Movie</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete this movie?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDelete} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={handleDelete} color='primary'>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default MovieList\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport './App.css'\nimport SenatorList from './views/SenatorList'\nimport RepresentativeList from './views/RepresentativeList'\nimport Layout from './components/Layout'\nimport Welcome from './components/Welcome'\nimport { CongressContextProvider } from './contexts/CongressContext'\nimport { CSSTransition } from 'react-transition-group'\nimport RickMortyViewer from './components/RickMortyViewer'\nimport MovieList from './views/MovieList'\n\nconst routes = [\n  { path: '/house', Component: RepresentativeList },\n  { path: '/senate', Component: SenatorList },\n  { path: '/graphql', Component: RickMortyViewer },\n  { path: '/movies', Component: MovieList },\n  { path: '/', Component: Welcome }\n]\n\nfunction App() {\n  return (\n    <CongressContextProvider>\n      <div className='App'>\n        <Layout />\n        {routes.map(({ path, Component }) => (\n          <Route key={path} exact path={path}>\n          {({ match }) => (\n              <CSSTransition\n                in={match !== null}\n                timeout={300}\n                classNames='fade'\n                unmountOnExit\n              >\n                <div className='fade'>\n                  <Component />\n                </div>\n                </CSSTransition>\n            )}\n          </Route>\n        ))}\n        \n      </div>\n    </CongressContextProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport AuthContextProvider from './contexts/AuthContext'\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\n\nconst client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql/',\n  cache: new InMemoryCache(),\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <BrowserRouter>\n        <ApolloProvider client={client}>\n          <App />\n        </ApolloProvider>\n      </BrowserRouter>\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}